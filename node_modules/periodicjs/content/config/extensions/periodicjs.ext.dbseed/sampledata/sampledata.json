{
  "data": [
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 120,
        "title": "can view themes",
        "name": "can-view-themes"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 360,
        "title": "can add uac",
        "name": "can-add-uac"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 110,
        "title": "can view content",
        "name": "can-view-content"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 150,
        "title": "can view users",
        "name": "can-view-users"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 160,
        "title": "can view uac",
        "name": "can-view-uac"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 740,
        "title": "can modify settings",
        "name": "can-modify-settings"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 140,
        "title": "can view settings",
        "name": "can-view-settings"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 310,
        "title": "can add content",
        "name": "can-add-content"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 130,
        "title": "can view extensions",
        "name": "can-view-extensions"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 920,
        "title": "can delete themes",
        "name": "can-delete-themes"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 350,
        "title": "can add users",
        "name": "can-add-users"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 715,
        "title": "can modify other content",
        "name": "can-modify-other-content"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 320,
        "title": "can add themes",
        "name": "can-add-themes"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 710,
        "title": "can modify content",
        "name": "can-modify-content"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 330,
        "title": "can add extensions",
        "name": "can-add-extensions"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 730,
        "title": "can modify extensions",
        "name": "can-modify-extensions"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 750,
        "title": "can modify users",
        "name": "can-modify-users"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 760,
        "title": "can modify uac",
        "name": "can-modify-uac"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 720,
        "title": "can modify themes",
        "name": "can-modify-themes"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 930,
        "title": "can delete extensions",
        "name": "can-delete-extensions"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 915,
        "title": "can delete other content",
        "name": "can-delete-other-content"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 950,
        "title": "can delete users",
        "name": "can-delete-users"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 910,
        "title": "can delete content",
        "name": "can-delete-content"
      }
    },
    {
      "datatype": "userprivilege",
      "datadocument": {
        "userprivilegeid": 960,
        "title": "can delete uac",
        "name": "can-delete-uac"
      }
    },
    {
      "datatype": "userrole",
      "datadocument": {
        "userroleid": 900,
        "title": "admin",
        "name": "admin",
        "privileges": [
          110,
          120,
          130,
          140,
          150,
          160,
          310,
          320,
          330,
          350,
          360,
          710,
          715,
          720,
          730,
          740,
          750,
          760,
          910,
          915,
          920,
          930,
          950,
          960
        ]
      }
    },
    {
      "datatype": "userrole",
      "datadocument": {
        "userroleid": 700,
        "title": "developer",
        "name": "developer",
        "privileges": [
          110,
          120,
          130,
          140,
          150,
          160,
          310,
          320,
          330,
          350,
          360,
          710,
          715,
          720,
          730,
          740,
          910
        ]
      }
    },
    {
      "datatype": "userrole",
      "datadocument": {
        "userroleid": 500,
        "title": "editor",
        "name": "editor",
        "privileges": [
          110,
          120,
          130,
          140,
          150,
          160,
          310,
          320,
          330,
          350,
          360,
          710,
          715,
          910,
          915
        ]
      }
    },
    {
      "datatype": "userrole",
      "datadocument": {
        "userroleid": 100,
        "title": "user",
        "name": "user"
      }
    },
    {
      "datatype": "userrole",
      "datadocument": {
        "userroleid": 999,
        "title": "super admin",
        "name": "super-admin"
      }
    },
    {
      "datatype": "userrole",
      "datadocument": {
        "userroleid": 300,
        "title": "writer",
        "name": "writer",
        "privileges": [
          110,
          310,
          710,
          910
        ]
      }
    },
    {
      "datatype": "usergroup",
      "datadocument": {
        "usergroupid": 999,
        "title": "super admin",
        "name": "super-admin"
      }
    },
    {
      "datatype": "usergroup",
      "datadocument": {
        "usergroupid": 900,
        "title": "admin",
        "name": "admin"
      }
    },
    {
      "datatype": "usergroup",
      "datadocument": {
        "usergroupid": 700,
        "title": "developer",
        "name": "developer"
      }
    },
    {
      "datatype": "usergroup",
      "datadocument": {
        "usergroupid": 500,
        "title": "editor",
        "name": "editor"
      }
    },
    {
      "datatype": "usergroup",
      "datadocument": {
        "usergroupid": 300,
        "title": "writer",
        "name": "writer"
      }
    },
    {
      "datatype": "usergroup",
      "datadocument": {
        "usergroupid": 100,
        "title": "user",
        "name": "user"
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "reader theme navigation",
        "name": "reader-theme-navigation",
        "status": "VALID",
        "createdat": "2014-11-12T23:28:49.346Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-menu-screenshot.png",
        "locationtype": "local",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-menu-screenshot.png",
          "periodicPath": "/public/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-menu-screenshot.png",
          "periodicDirectory": "/public/uploads/files/2014/10/12"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "reader theme author profile",
        "name": "reader-theme-author-profile",
        "status": "VALID",
        "createdat": "2014-11-12T23:29:35.928Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-author-page-screenshot.png",
        "locationtype": "local",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-author-page-screenshot.png",
          "periodicPath": "/public/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-author-page-screenshot.png",
          "periodicDirectory": "/public/uploads/files/2014/10/12"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "reader theme homepage",
        "name": "reader-theme-homepage",
        "status": "VALID",
        "createdat": "2014-11-12T23:29:35.931Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-sample-homepage-screenshot.png",
        "locationtype": "local",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-sample-homepage-screenshot.png",
          "periodicPath": "/public/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-sample-homepage-screenshot.png",
          "periodicDirectory": "/public/uploads/files/2014/10/12"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "search for content",
        "name": "search-for-content",
        "status": "VALID",
        "createdat": "2014-11-12T23:29:35.936Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-search-screenshot.png",
        "locationtype": "local",
        "content": "searching for content in reader theme",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-search-screenshot.png",
          "periodicPath": "/public/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-search-screenshot.png",
          "periodicDirectory": "/public/uploads/files/2014/10/12"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Effective application development and content development",
        "name": "effective-application-development-and-content-development",
        "status": "VALID",
        "createdat": "2014-11-13T00:40:53.137Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/jpeg",
        "fileurl": "/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-periodic.jpg",
        "locationtype": "local",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-periodic.jpg",
          "periodicPath": "/public/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-periodic.jpg",
          "periodicDirectory": "/public/uploads/files/2014/10/13"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Manage files",
        "name": "manage-files",
        "status": "VALID",
        "createdat": "2014-11-12T23:36:19.779Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-admin-assets-screenshot.png",
        "locationtype": "local",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-admin-assets-screenshot.png",
          "periodicPath": "/public/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-admin-assets-screenshot.png",
          "periodicDirectory": "/public/uploads/files/2014/10/12"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Manage installed extensions",
        "name": "manage-installed-extensions",
        "status": "VALID",
        "createdat": "2014-11-12T23:38:38.916Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-extensions-list-screenshot.png",
        "locationtype": "local",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-extensions-list-screenshot.png",
          "periodicPath": "/public/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-extensions-list-screenshot.png",
          "periodicDirectory": "/public/uploads/files/2014/10/12"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Edit extension configuration",
        "name": "edit-extension-configuration",
        "status": "VALID",
        "createdat": "2014-11-12T23:38:51.721Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-extension-setting-screenshot.png",
        "locationtype": "local",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-extension-setting-screenshot.png",
          "periodicPath": "/public/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-extension-setting-screenshot.png",
          "periodicDirectory": "/public/uploads/files/2014/10/12"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Install new extensions",
        "name": "install-new-extensions",
        "status": "VALID",
        "createdat": "2014-11-12T23:38:51.725Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-extensions-install-screenshot.png",
        "locationtype": "local",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-extensions-install-screenshot.png",
          "periodicPath": "/public/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-extensions-install-screenshot.png",
          "periodicDirectory": "/public/uploads/files/2014/10/12"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Login Extension",
        "name": "login-extension",
        "status": "VALID",
        "createdat": "2014-11-12T23:39:07.371Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-login-extension.png",
        "locationtype": "local",
        "content": "The login extension allows for users to create accounts",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-login-extension.png",
          "periodicPath": "/public/uploads/files/2014/10/12/54628f66f1bf6b0e7d51a759-login-extension.png",
          "periodicDirectory": "/public/uploads/files/2014/10/12"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Manage users",
        "name": "manage-users",
        "status": "VALID",
        "createdat": "2014-11-13T00:05:07.397Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-admin-user-roles.png",
        "locationtype": "local",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-admin-user-roles.png",
          "periodicPath": "/public/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-admin-user-roles.png",
          "periodicDirectory": "/public/uploads/files/2014/10/13"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Switch Themes",
        "name": "switch-themes",
        "status": "VALID",
        "createdat": "2014-11-13T00:05:07.411Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-themes-list.png",
        "locationtype": "local",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-themes-list.png",
          "periodicPath": "/public/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-themes-list.png",
          "periodicDirectory": "/public/uploads/files/2014/10/13"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Install new themes",
        "name": "install-new-themes",
        "status": "VALID",
        "createdat": "2014-11-13T00:05:07.415Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-themes-install.png",
        "locationtype": "local",
        "content": "install new theme modal",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-themes-install.png",
          "periodicPath": "/public/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-themes-install.png",
          "periodicDirectory": "/public/uploads/files/2014/10/13"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Customize your application settings",
        "name": "customize-your-application-settings",
        "status": "VALID",
        "createdat": "2014-11-13T00:05:07.417Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-admin-settings.png",
        "locationtype": "local",
        "content": "you can easily customize your application settings",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-admin-settings.png",
          "periodicPath": "/public/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-admin-settings.png",
          "periodicDirectory": "/public/uploads/files/2014/10/13"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Editing Items",
        "name": "editing-items",
        "status": "VALID",
        "createdat": "2014-11-13T00:05:07.425Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-admin-items.png",
        "locationtype": "local",
        "content": "edit content with the admin extension",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-admin-items.png",
          "periodicPath": "/public/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-admin-items.png",
          "periodicDirectory": "/public/uploads/files/2014/10/13"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "User Privileges",
        "name": "user-privileges",
        "status": "VALID",
        "createdat": "2014-11-13T00:05:07.434Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-admin-user-priviliges.png",
        "locationtype": "local",
        "content": "it's easy to define new privileges to control access to content",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-admin-user-priviliges.png",
          "periodicPath": "/public/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-admin-user-priviliges.png",
          "periodicDirectory": "/public/uploads/files/2014/10/13"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Add new themes",
        "name": "add-new-themes",
        "status": "VALID",
        "createdat": "2014-11-13T00:05:07.443Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-themes-add-new.png",
        "locationtype": "local",
        "content": "you can easily add new themes from the admin interface, public free ones are hosted on github",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-themes-add-new.png",
          "periodicPath": "/public/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-themes-add-new.png",
          "periodicDirectory": "/public/uploads/files/2014/10/13"
        }
      }
    },
    {
      "datatype": "asset",
      "datadocument": {
        "title": "Theme settings screenshot",
        "name": "theme-settings-screenshot",
        "status": "VALID",
        "createdat": "2014-11-13T00:05:07.449Z",
        "author": "staff",
        "entitytype": "asset",
        "assettype": "image/png",
        "fileurl": "/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-theme-settings.png",
        "locationtype": "local",
        "content": "Every theme can have it's own JSON settings file, designed for easy customization&nbsp;",
        "attributes": {
          "periodicFilename": "54628f66f1bf6b0e7d51a759-theme-settings.png",
          "periodicPath": "/public/uploads/files/2014/10/13/54628f66f1bf6b0e7d51a759-theme-settings.png",
          "periodicDirectory": "/public/uploads/files/2014/10/13"
        }
      }
    },
    {
      "datatype": "user",
      "datadocument": {
        "email": "staff@example.com",
        "firstname": "Periodic",
        "lastname": "Staff",
        "username": "staff",
        "url": "http://getperiodic.org",
        "description": "Periodic is an application framework built on top of Express and MongoDB designed for data driven, content based web and mobile applications.",
        "activated": false,
        "location": {
          "loc": {}
        },
        "updatedat": "2014-08-22T19:38:38.926Z",
        "createdat": "2014-08-22T19:38:38.925Z",
        "accounttype": "basic",
        "gender": "male",
        "userroles": [
          900,
          700
        ],
        "random": 0.13715509860776365
      }
    },
    {
        "datatype": "user",
        "datadocument": {
            "email": "testuser1@example.com",
            "username": "testuser1",
            "accounttype": "invalid",
            "userasset":"not actual image",
            "userroles":[900,500,300,600,100],
            "random": 0.12715509463776335
        }
    },
    {
      "datatype": "contenttype",
      "datadocument": {
        "title": "podcast",
        "name": "podcast"
      }
    },
    {
      "datatype": "contenttype",
      "datadocument": {
        "title": "blog",
        "name": "blog",
        "attributes": [
          {
            "title": "summary",
            "datatype": "string",
            "name": "summary",
            "_id": "53f79c3fdd73ed0000effdf9"
          },
          {
            "title": "original link",
            "datatype": "url",
            "defaultvalue": "http://getperiodic.com",
            "name": "original-link",
            "_id": "53f79c3fdd73ed0000effdf8"
          }
        ]
      }
    },
    {
      "datatype": "contenttype",
      "datadocument": {
        "title": "video",
        "name": "video",
        "attributes": [
          {
            "title": "author",
            "datatype": "string",
            "name": "author",
            "_id": "53f79c3fdd73ed0000effdfc"
          },
          {
            "title": "media url",
            "datatype": "string",
            "name": "media_url",
            "_id": "53f79c3fdd73ed0000effdfb"
          }
        ]
      }
    },
    {
      "datatype": "contenttype",
      "datadocument": {
        "title": "audio",
        "name": "audio",
        "attributes": [
          {
            "title": "artist",
            "datatype": "string",
            "name": "artist",
            "_id": "53f79c3fdd73ed0000effe00"
          },
          {
            "title": "title",
            "datatype": "string",
            "name": "title",
            "_id": "53f79c3fdd73ed0000effdff"
          },
          {
            "title": "media url",
            "datatype": "url",
            "name": "media_url",
            "_id": "53f79c3fdd73ed0000effdfe"
          }
        ]
      }
    },
    {
      "datatype": "contenttype",
      "datadocument": {
        "title": "slideshow",
        "name": "slideshow",
        "attributes": [
          {
            "title": "locations",
            "datatype": "string",
            "name": "locations",
            "_id": "53f79c3fdd73ed0000effe02"
          }
        ]
      }
    },
    {
      "datatype": "contenttype",
      "datadocument": {
        "title": "image",
        "name": "image",
        "attributes": [
          {
            "title": "image file",
            "datatype": "url",
            "name": "image_file",
            "_id": "53f79c3fdd73ed0000effe09"
          },
          {
            "title": "credits",
            "datatype": "url",
            "name": "credits",
            "_id": "53f79c3fdd73ed0000effe08"
          },
          {
            "title": "summary",
            "datatype": "url",
            "name": "summary",
            "_id": "53f79c3fdd73ed0000effe07"
          }
        ]
      }
    },
    {
      "datatype": "contenttype",
      "datadocument": {
        "title": "tag",
        "name": "tag",
        "attributes": [
          {
            "title": "image",
            "datatype": "string",
            "name": "image",
            "_id": "544717d7a4d5174caae86072"
          },
          {
            "title": "lat",
            "datatype": "string",
            "name": "lat",
            "_id": "544717dea4d5174caae86073"
          },
          {
            "title": "long",
            "datatype": "string",
            "name": "long",
            "_id": "544717e1a4d5174caae86074"
          }
        ]
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "music",
        "name": "music",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "periodic",
        "name": "periodic",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "content",
        "name": "content",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "tags",
        "name": "tags",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "categories",
        "name": "categories",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "content types",
        "name": "content-types",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "assets",
        "name": "assets",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "collections",
        "name": "collections",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "compilations",
        "name": "compilations",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "files",
        "name": "files",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "uploads",
        "name": "uploads",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "themes",
        "name": "themes",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "ui/ux",
        "name": "ui-ux",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "extensions",
        "name": "extensions",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "node.js",
        "name": "node-js",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "modules",
        "name": "modules",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "settings",
        "name": "settings",
        "author": "staff"
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "g-eazy",
        "name": "g-eazy",
        "author": "staff",
        "contenttypes": [
          "blog"
        ],
        "contenttypeattributes": {
          "blog": {
            "original-link": "http://getperiodic.com"
          }
        }
      }
    },
    {
      "datatype": "tag",
      "datadocument": {
        "title": "design",
        "name": "design",
        "author": "staff"
      }
    },
    {
      "datatype": "category",
      "datadocument": {
        "title": "Updates",
        "name": "updates",
        "author": "staff"
      }
    },
    {
      "datatype": "category",
      "datadocument": {
        "title": "Extensions",
        "name": "extensions",
        "author": "staff"
      }
    },
    {
      "datatype": "category",
      "datadocument": {
        "title": "Themes",
        "name": "themes",
        "author": "staff"
      }
    },
    {
      "datatype": "category",
      "datadocument": {
        "title": "Content Management",
        "name": "content-management",
        "author": "staff"
      }
    },
    {
      "datatype": "category",
      "datadocument": {
        "title": "Good Resources",
        "name": "good-resources",
        "author": "staff"
      }
    },
    {
      "datatype": "item",
      "datadocument": {
        "random": 0.5838757136370987,
        "title": "Extending Periodic with new functionality",
        "name": "extending-periodic-with-new-functionality",
        "content": "<p>Extensions are node modules that extend periodic's core functionality. Periodic is framework for building data driven, content based applications, without any extensions it's a light Express application wrapper.</p>\n<p>Extensions add useful functionality, the most important extension that is installed with a basic installation is the <strong>Admin</strong> extension.</p>\n<p>Extensions can literally do anything you want to an express app, define new routes, augment views, manipulate data</p>\n<h4>Extension feature set</h4>\n<ul>\n    <li>\n        <strong>Node Module</strong>\n        <br>Extensions are node modules that are installed via the command line or through the admin extension</li>\n    <li>\n        <strong>Extended Optional Functionality</strong>\n        <br>Periodic is extremely modular, all extensions are optional. You can include only what your application needs.</li>\n</ul>\n<p>Read more about how to create your own extensions on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Extensions\">Periodic Wiki - Extensions</a></p>",
        "collectionitemonly": true,
        "updatedat": "2014-11-12T21:35:43.789Z",
        "createdat": "2014-11-12T21:35:43.789Z",
        "publishat": "2014-11-12T21:34:00.000Z",
        "entitytype": "item",
        "status": "publish",
        "itemauthorname": "staff",
        "primaryauthor": "staff",
        "primaryasset": "manage-installed-extensions",
        "changes": [
          {
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "changeset": {
              "title": "Extending Periodic with new functionality",
              "name": "extending-periodic-with-new-functionality",
              "tags": [
                "5463d293235ff15c396925af",
                "5463d297235ff15c396925b0",
                "5463d29c235ff15c396925b1"
              ],
              "categories": [
                "54628f66f1bf6b0e7d51a772",
                "54628f66f1bf6b0e7d51a774"
              ],
              "assets": [
                null
              ],
              "contenttypes": [
                null
              ]
            },
            "_id": "5463d2af235ff15c396925b3",
            "createdat": "2014-11-12T21:35:43.789Z"
          },
          {
            "changeset": {
              "content": "<p>Extensions are node modules that extend periodic's core functionality. Periodic is framework for building data driven, content based applications, without any extensions it's a light Express application wrapper.</p>\n<p>Extensions add useful functionality, the most important extension that is installed with a basic installation is the <strong>Admin</strong> extension.</p>\n<p>Extensions can literally do anything you want to an express app, define new routes, augment views, manipulate data</p>\n<h4>Extension feature set</h4>\n<ul>\n    <li>\n        <strong>Node Module</strong>\n        <br>Extensions are node modules that are installed via the command line or through the admin extension</li>\n    <li>\n        <strong>Extended Optional Functionality</strong>\n        <br>Periodic is extremely modular, all extensions are optional. You can include only what your application needs.</li>\n</ul>\n<p>Read more about how to create your own extensions on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Extensions\">Periodic Wiki - Extensions</a></p>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463dbcd235ff15c396925b6",
            "createdat": "2014-11-12T22:14:37.183Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ef7e8a9d9f00006e0cb8"
              ],
              "primaryasset": "5463ef7e8a9d9f00006e0cb8"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ef7f8a9d9f00006e0cb9",
            "createdat": "2014-11-12T23:38:39.433Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ef7e8a9d9f00006e0cb8",
                "5463ef8b8a9d9f00006e0cba",
                "5463ef8b8a9d9f00006e0cbb"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ef8c8a9d9f00006e0cbc",
            "createdat": "2014-11-12T23:38:52.246Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ef7e8a9d9f00006e0cb8",
                "5463ef8b8a9d9f00006e0cba",
                "5463ef8b8a9d9f00006e0cbb",
                "5463ef9b8a9d9f00006e0cbd"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ef9b8a9d9f00006e0cbe",
            "createdat": "2014-11-12T23:39:07.887Z"
          }
        ],
        "tags": [
          "extensions",
          "node-js",
          "modules"
        ],
        "categories": [
          "extensions",
          "content-management"
        ],
        "authors": [
          "staff"
        ],
        "assets": [
          "manage-installed-extensions",
          "edit-extension-configuration",
          "install-new-extensions",
          "login-extension"
        ],
        "originalitem": {}
      }
    },
    {
      "datatype": "item",
      "datadocument": {
        "random": 0.8224401229526848,
        "title": "Managing Files and Assets",
        "name": "managing-files-and-assets",
        "content": "<p>It's extremely straight forward to work with files and assets. Items can have an asset marked as the primary asset, and also has an array of assets.</p>\n<p>Each asset can have it's own associated meta data, including it's own taxonomy.</p>\n<p>There are tons of extensions that handle cloud file management, image cropping and more</p>",
        "collectionitemonly": true,
        "updatedat": "2014-11-12T21:02:00.891Z",
        "createdat": "2014-11-12T21:02:00.891Z",
        "publishat": "2014-11-12T21:01:00.000Z",
        "entitytype": "item",
        "status": "publish",
        "itemauthorname": "staff",
        "primaryauthor": "staff",
        "changes": [
          {
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "changeset": {
              "title": "Managing Files and Assets",
              "name": "managing-files-and-assets",
              "tags": [
                null
              ],
              "categories": [
                null
              ],
              "assets": [
                null
              ],
              "contenttypes": [
                null
              ]
            },
            "_id": "5463cac8235ff15c3969259b",
            "createdat": "2014-11-12T21:02:00.892Z"
          },
          {
            "changeset": {
              "categories": [
                "54628f66f1bf6b0e7d51a774"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463cad4235ff15c3969259c",
            "createdat": "2014-11-12T21:02:12.296Z"
          },
          {
            "changeset": {
              "tags": [
                "5463b05e69176103b96f40f6"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463cad8235ff15c3969259d",
            "createdat": "2014-11-12T21:02:16.984Z"
          },
          {
            "changeset": {
              "tags": [
                "5463b05e69176103b96f40f6"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463cad8235ff15c3969259e",
            "createdat": "2014-11-12T21:02:16.993Z"
          },
          {
            "changeset": {
              "tags": [
                "5463b05e69176103b96f40f6",
                "5463cadc235ff15c3969259f"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463cadc235ff15c396925a0",
            "createdat": "2014-11-12T21:02:20.561Z"
          },
          {
            "changeset": {
              "tags": [
                "5463b05e69176103b96f40f6",
                "5463cadc235ff15c3969259f",
                "5463cadd235ff15c396925a1"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463cade235ff15c396925a2",
            "createdat": "2014-11-12T21:02:22.204Z"
          },
          {
            "changeset": {
              "status": "publish"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463cae5235ff15c396925a3",
            "createdat": "2014-11-12T21:02:29.537Z"
          },
          {
            "changeset": {
              "content": "<p>It's extremely straight forward to work with files and assets. Items can have an asset marked as the primary asset, and also has an array of assets.</p>\n<p>Each asset can have it's own associated meta data, including it's own taxonomy.</p>\n<p>There are tons of extensions that handle cloud file management, image cropping and more</p>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463cccd235ff15c396925a5",
            "createdat": "2014-11-12T21:10:37.823Z"
          }
        ],
        "tags": [
          "assets",
          "files",
          "uploads"
        ],
        "categories": [
          "content-management"
        ],
        "authors": [
          "staff"
        ],
        "originalitem": {}
      }
    },
    {
      "datatype": "item",
      "datadocument": {
        "random": 0.08892572787590325,
        "title": "Changing the look and feel",
        "name": "changing-the-look-and-feel",
        "content": "<p>Periodic is designed to allow for every application has it's own presentation layer logic, themes are an optional feature that allows for quick customization over the look and feel of your Periodic application.</p>\n<p>Periodic is built on top of Express, therefore there are very little limitations in terms of what you can do from a presentation perspective.</p>\n<h4>Feature set for themes</h4>\n<ul>\n\t<li>\n\t\t<strong>Framework agnositic presentation layer</strong><br>\n\t\tAngular, Polymer, Backbone, Ember, VanillaJS, Browserify, RequireJS, jQuery, Jade, EJS, Handlebars, you get the idea, there are no limitations with front-end frameworks.\n\t</li>\n\t<li>\n\t\t<strong>Free themes on github</strong><br>\n\t\tThemes can be installed from the Command Line Interface or with the Admin Extension, after installation, the theme files will be namespaced in your public directory under <i>public/themes/[name-of-theme]/[theme public files are copied here after install]</i>.\n\t</li>\n\t<li>\n\t\t<strong>Custom routing</strong><br>\n\t\tYou can define your own routing structure for your theme, call items: articles, call collections: slideshows, and more.\n\t</li>\n\t<li>\n\t\t<strong>Extendable</strong><br>\n\t\tExtensions can add additional functionality (like SEO, Analytics and more).\n\t</li>\n</ul>\n<p>Read more about how to customize and create your own themes on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Themes\" title=\"Link: https://github.com/typesettin/periodicjs/wiki/Themes\">Periodic Wiki - Themes</a></p>",
        "collectionitemonly": true,
        "updatedat": "2014-11-12T21:18:53.443Z",
        "createdat": "2014-11-12T21:18:53.443Z",
        "publishat": "2014-11-12T21:17:00.000Z",
        "entitytype": "item",
        "status": "publish",
        "itemauthorname": "staff",
        "primaryauthor": "staff",
        "changes": [
          {
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "changeset": {
              "title": "Changing the look and feel",
              "name": "changing-the-look-and-feel",
              "tags": [
                "5463cea7235ff15c396925a6",
                "5463ceab235ff15c396925a7",
                "5463ceb2235ff15c396925a8"
              ],
              "categories": [
                "54628f66f1bf6b0e7d51a773",
                "54628f66f1bf6b0e7d51a774"
              ],
              "assets": [
                null
              ],
              "contenttypes": [
                null
              ]
            },
            "_id": "5463cebd235ff15c396925aa",
            "createdat": "2014-11-12T21:18:53.444Z"
          },
          {
            "changeset": {
              "status": "publish"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463cec2235ff15c396925ab",
            "createdat": "2014-11-12T21:18:58.658Z"
          },
          {
            "changeset": {
              "content": "<p>Periodic is designed to allow for every application has it's own presentation layer logic, themes are an optional feature that allows for quick customization over the look and feel of your Periodic application.</p>\n<p>Periodic is built on top of Express, therefore there are very little limitations in terms of what you can do from a presentation perspective.</p>\n<h4>Feature set for themes</h4>\n<ul>\n\t<li>\n\t\t<strong>Framework agnositic presentation layer</strong></br>\n\t\tAngular, Polymer, Backbone, Ember, VanillaJS, Browserify, RequireJS, jQuery, Jade, EJS, Handlebars, you get the idea, there are no limitations with front-end frameworks.\n\t</li>\n\t\n\t<li>\n\t\t<strong>Free themes on github</strong></br>\n\t\tThemes can be installed from the Command Line Interface or with the Admin Extension, after installation, the theme files will be namespaced in your public directory under <i>public/themes/[name-of-theme]/[theme public files are copied here after install]</i>.\n\t</li>\n\t\n\t<li>\n\t\t<strong>Custom routing</strong></br>\n\t\tYou can define your own routing structure for your theme, call items: articles, call collections: slideshows, and more.\n\t</li>\n\t\n\t<li>\n\t\t<strong>Extendable</strong></br>\n\t\tExtensions can add additional functionality (like SEO, Analytics and more).\n\t</li>\n\n</ul>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463d0d7235ff15c396925ac",
            "createdat": "2014-11-12T21:27:51.249Z"
          },
          {
            "changeset": {
              "content": "<p>Periodic is designed to allow for every application has it's own presentation layer logic, themes are an optional feature that allows for quick customization over the look and feel of your Periodic application.</p>\n<p>Periodic is built on top of Express, therefore there are very little limitations in terms of what you can do from a presentation perspective.</p>\n<h4>Feature set for themes</h4>\n<ul>\n\t<li>\n\t\t<strong>Framework agnositic presentation layer</strong><br>\n\t\tAngular, Polymer, Backbone, Ember, VanillaJS, Browserify, RequireJS, jQuery, Jade, EJS, Handlebars, you get the idea, there are no limitations with front-end frameworks.\n\t</li>\n\t<li>\n\t\t<strong>Free themes on github</strong><br>\n\t\tThemes can be installed from the Command Line Interface or with the Admin Extension, after installation, the theme files will be namespaced in your public directory under <i>public/themes/[name-of-theme]/[theme public files are copied here after install]</i>.\n\t</li>\n\t<li>\n\t\t<strong>Custom routing</strong><br>\n\t\tYou can define your own routing structure for your theme, call items: articles, call collections: slideshows, and more.\n\t</li>\n\t<li>\n\t\t<strong>Extendable</strong><br>\n\t\tExtensions can add additional functionality (like SEO, Analytics and more).\n\t</li>\n</ul>\n<p>Read more about how to customize and create your own themes on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Themes\">Periodic Wiki</a></p>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463d175235ff15c396925ad",
            "createdat": "2014-11-12T21:30:29.005Z"
          },
          {
            "changeset": {
              "content": "<p>Periodic is designed to allow for every application has it's own presentation layer logic, themes are an optional feature that allows for quick customization over the look and feel of your Periodic application.</p>\n<p>Periodic is built on top of Express, therefore there are very little limitations in terms of what you can do from a presentation perspective.</p>\n<h4>Feature set for themes</h4>\n<ul>\n\t<li>\n\t\t<strong>Framework agnositic presentation layer</strong><br>\n\t\tAngular, Polymer, Backbone, Ember, VanillaJS, Browserify, RequireJS, jQuery, Jade, EJS, Handlebars, you get the idea, there are no limitations with front-end frameworks.\n\t</li>\n\t<li>\n\t\t<strong>Free themes on github</strong><br>\n\t\tThemes can be installed from the Command Line Interface or with the Admin Extension, after installation, the theme files will be namespaced in your public directory under <i>public/themes/[name-of-theme]/[theme public files are copied here after install]</i>.\n\t</li>\n\t<li>\n\t\t<strong>Custom routing</strong><br>\n\t\tYou can define your own routing structure for your theme, call items: articles, call collections: slideshows, and more.\n\t</li>\n\t<li>\n\t\t<strong>Extendable</strong><br>\n\t\tExtensions can add additional functionality (like SEO, Analytics and more).\n\t</li>\n</ul>\n<p>Read more about how to customize and create your own themes on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Themes\" title=\"Link: https://github.com/typesettin/periodicjs/wiki/Themes\">Periodic Wiki - Themes</a></p>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463d323235ff15c396925b5",
            "createdat": "2014-11-12T21:37:39.789Z"
          }
        ],
        "tags": [
          "themes",
          "ui-ux",
          "design"
        ],
        "categories": [
          "themes",
          "content-management"
        ],
        "authors": [
          "staff"
        ],
        "originalitem": {}
      }
    },
    {
      "datatype": "item",
      "datadocument": {
        "random": 0.7687720137182623,
        "title": "Welcome to Periodic",
        "name": "welcome-to-periodic",
        "content": "<h4>Periodic is an application framework built on top of Express and MongoDB designed for data driven, content based web and mobile applications.</h4><p>What does that mean exactly? From an application perspective it means that the platform is 100% open source and composed of extremely modular components that enable creating bespoke&nbsp;<a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/blob/master/nodejs.org\">Node.js</a>/<a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/blob/master/expressjs.com\" title=\"Link: https://github.com/typesettin/periodicjs/blob/master/expressjs.com\">Express</a>/<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.mongodb.org/\">MongoDB</a>&nbsp;based applications efficiently with new or existing themes and extensions.</p><p>For content creators, it means you can stop limiting the scope of your web presence to websites, blogs, single page apps and start thinking about holistic products. Periodic is not a content management system, it's an application framework designed to build content heavy and data driven products.</p><h3>What can I build with Periodic?</h3><p>The platform is built with the UNIX / small utility / modular application design philosophy in mind. Content creators, developers, software engineers and entrepreneurs are encouraged to build large robust applications by integrating small single purposed extensions.</p><p>Periodic emphasizes a curated (and non-opinionated) workflow, using Express with MongoDB and an extremely malleable data model.</p><p>The use of additional frameworks, templating languages and design libraries is highly encouraged.</p><p>Applications built with Periodic range from simple blogs, complicated enterprise media publications, mobile application datastores, e-commerce platforms and more.</p><h3><a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs#whats-included\"></a>What's included?</h3><ul><li><strong>Flexible information hierarchy &amp; data model</strong><br>Efficiently create custom content items and groupings, with custom content types and additional data attributes</li><li><strong>Theming &amp; unrestrictive layouts</strong><br>Override application functionality with framework friendly, design library agnostic custom themes.</li><li><strong>Modular &amp; infinitely extendible</strong><br>Add extensions, node modules and more functionality with ease.</li><li><strong>High Scalable, Deployment &amp; Enterprise Friendly</strong><br>Quickly deploy and manage instances with PM2. Cloud friendly and create edge nodes, read only and private content management instances.</li></ul>&nbsp;",
        "collectionitemonly": false,
        "updatedat": "2014-11-12T17:23:30.218Z",
        "createdat": "2014-11-12T17:23:30.218Z",
        "publishat": "2014-11-12T22:54:00.000Z",
        "entitytype": "item",
        "status": "publish",
        "itemauthorname": "staff",
        "primaryauthor": "staff",
        "primaryasset": "effective-application-development-and-content-development",
        "changes": [
          {
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "changeset": {
              "title": "Welcome to Periodic",
              "name": "welcome-to-periodic",
              "content": "<h2>Periodic is an application framework built on top of Express and MongoDB designed for data driven, content based web and mobile applications.</h2>What does that mean exactly? From an application perspective it means that the platform is 100% open source and composed of extremely modular components that enable creating bespoke&nbsp;<a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/blob/master/nodejs.org\">Node.js</a>/<a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/blob/master/expressjs.com\">Express</a>/<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.mongodb.org/\">MongoDB</a><span>&nbsp;based applications efficiently with new or existing themes and extensions.<br><br>For content creators, it means you can stop limiting the scope of your web presence to websites, blogs, single page apps and start thinking about holistic products. Periodic is not a content management system, it's an application framework designed to build content heavy and data driven products.<br><br></span><h3>What can I build with Periodic?</h3><p>The platform is built with the UNIX / small utility / modular application design philosophy in mind. Content creators, developers, software engineers and entrepreneurs are encouraged to build large robust applications by integrating small single purposed extensions.</p><p>Periodic emphasizes a curated (and non-opinionated) workflow, using Express with MongoDB and an extremely malleable data model.</p><p>The use of additional frameworks, templating languages and design libraries is highly encouraged.</p><p>Applications built with Periodic range from simple blogs, complicated enterprise media publications, mobile application datastores, e-commerce platforms and more.</p><h3><a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs#whats-included\"></a>What's included?</h3><ul><li><strong>Flexible information hierarchy &amp; data model</strong><br>Efficiently create custom content items and groupings, with custom content types and additional data attributes</li><li><strong>Theming &amp; unrestrictive layouts</strong><br>Override application functionality with framework friendly, design library agnostic custom themes.</li><li><strong>Modular &amp; infinitely extendible</strong><br>Add extensions, node modules and more functionality with ease.</li><li><strong>High Scalable, Deployment &amp; Enterprise Friendly</strong><br>Quickly deploy and manage instances with PM2. Cloud friendly and create edge nodes, read only and private content management instances.</li></ul>&nbsp;",
              "tags": [
                null
              ],
              "categories": [
                null
              ],
              "assets": [
                null
              ],
              "contenttypes": [
                null
              ]
            },
            "_id": "546397925420cd65a1626246",
            "createdat": "2014-11-12T17:23:30.220Z"
          },
          {
            "changeset": {
              "content": "<h2>Periodic is an application framework built on top of Express and MongoDB designed for data driven, content based web and mobile applications.</h2><p>What does that mean exactly? From an application perspective it means that the platform is 100% open source and composed of extremely modular components that enable creating bespoke&nbsp;<a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/blob/master/nodejs.org\">Node.js</a>/<a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/blob/master/expressjs.com\">Express</a>/<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.mongodb.org/\">MongoDB</a>&nbsp;based applications efficiently with new or existing themes and extensions.</p><p>For content creators, it means you can stop limiting the scope of your web presence to websites, blogs, single page apps and start thinking about holistic products. Periodic is not a content management system, it's an application framework designed to build content heavy and data driven products.</p><h3>What can I build with Periodic?</h3><p>The platform is built with the UNIX / small utility / modular application design philosophy in mind. Content creators, developers, software engineers and entrepreneurs are encouraged to build large robust applications by integrating small single purposed extensions.</p><p>Periodic emphasizes a curated (and non-opinionated) workflow, using Express with MongoDB and an extremely malleable data model.</p><p>The use of additional frameworks, templating languages and design libraries is highly encouraged.</p><p>Applications built with Periodic range from simple blogs, complicated enterprise media publications, mobile application datastores, e-commerce platforms and more.</p><h3><a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs#whats-included\"></a>What's included?</h3><ul><li><strong>Flexible information hierarchy &amp; data model</strong><br>Efficiently create custom content items and groupings, with custom content types and additional data attributes</li><li><strong>Theming &amp; unrestrictive layouts</strong><br>Override application functionality with framework friendly, design library agnostic custom themes.</li><li><strong>Modular &amp; infinitely extendible</strong><br>Add extensions, node modules and more functionality with ease.</li><li><strong>High Scalable, Deployment &amp; Enterprise Friendly</strong><br>Quickly deploy and manage instances with PM2. Cloud friendly and create edge nodes, read only and private content management instances.</li></ul>&nbsp;"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463980c5420cd65a1626247",
            "createdat": "2014-11-12T17:25:32.270Z"
          },
          {
            "changeset": {
              "categories": [
                "54628f66f1bf6b0e7d51a774"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ad0269176103b96f40ed",
            "createdat": "2014-11-12T18:54:58.067Z"
          },
          {
            "changeset": {
              "categories": [
                "54628f66f1bf6b0e7d51a774"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ad0269176103b96f40ee",
            "createdat": "2014-11-12T18:54:58.074Z"
          },
          {
            "changeset": {
              "tags": [
                "5463ad0769176103b96f40ef"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ad0769176103b96f40f0",
            "createdat": "2014-11-12T18:55:03.710Z"
          },
          {
            "changeset": {
              "status": "publish"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ade969176103b96f40f1",
            "createdat": "2014-11-12T18:58:49.709Z"
          },
          {
            "changeset": {
              "content": "<h4>Periodic is an application framework built on top of Express and MongoDB designed for data driven, content based web and mobile applications.</h4><p>What does that mean exactly? From an application perspective it means that the platform is 100% open source and composed of extremely modular components that enable creating bespoke&nbsp;<a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/blob/master/nodejs.org\">Node.js</a>/<a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/blob/master/expressjs.com\">Express</a>/<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.mongodb.org/\">MongoDB</a>&nbsp;based applications efficiently with new or existing themes and extensions.</p><p>For content creators, it means you can stop limiting the scope of your web presence to websites, blogs, single page apps and start thinking about holistic products. Periodic is not a content management system, it's an application framework designed to build content heavy and data driven products.</p><h3>What can I build with Periodic?</h3><p>The platform is built with the UNIX / small utility / modular application design philosophy in mind. Content creators, developers, software engineers and entrepreneurs are encouraged to build large robust applications by integrating small single purposed extensions.</p><p>Periodic emphasizes a curated (and non-opinionated) workflow, using Express with MongoDB and an extremely malleable data model.</p><p>The use of additional frameworks, templating languages and design libraries is highly encouraged.</p><p>Applications built with Periodic range from simple blogs, complicated enterprise media publications, mobile application datastores, e-commerce platforms and more.</p><h3><a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs#whats-included\"></a>What's included?</h3><ul><li><strong>Flexible information hierarchy &amp; data model</strong><br>Efficiently create custom content items and groupings, with custom content types and additional data attributes</li><li><strong>Theming &amp; unrestrictive layouts</strong><br>Override application functionality with framework friendly, design library agnostic custom themes.</li><li><strong>Modular &amp; infinitely extendible</strong><br>Add extensions, node modules and more functionality with ease.</li><li><strong>High Scalable, Deployment &amp; Enterprise Friendly</strong><br>Quickly deploy and manage instances with PM2. Cloud friendly and create edge nodes, read only and private content management instances.</li></ul>&nbsp;"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463c55d235ff15c39692597",
            "createdat": "2014-11-12T20:38:53.902Z"
          },
          {
            "changeset": {
              "publishat": "2014-11-12T22:54:00.000Z"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e3ae235ff15c396925da",
            "createdat": "2014-11-12T22:48:14.488Z"
          },
          {
            "changeset": {
              "assets": [
                "5463fe1529915100003c2b8b"
              ],
              "primaryasset": "5463fe1529915100003c2b8b"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463fe1529915100003c2b8c",
            "createdat": "2014-11-13T00:40:53.681Z"
          },
          {
            "changeset": {
              "content": "<h4>Periodic is an application framework built on top of Express and MongoDB designed for data driven, content based web and mobile applications.</h4><p>What does that mean exactly? From an application perspective it means that the platform is 100% open source and composed of extremely modular components that enable creating bespoke&nbsp;<a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/blob/master/nodejs.org\">Node.js</a>/<a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/blob/master/expressjs.com\" title=\"Link: https://github.com/typesettin/periodicjs/blob/master/expressjs.com\">Express</a>/<a rel=\"nofollow\" target=\"_blank\" href=\"http://www.mongodb.org/\">MongoDB</a>&nbsp;based applications efficiently with new or existing themes and extensions.</p><p>For content creators, it means you can stop limiting the scope of your web presence to websites, blogs, single page apps and start thinking about holistic products. Periodic is not a content management system, it's an application framework designed to build content heavy and data driven products.</p><h3>What can I build with Periodic?</h3><p>The platform is built with the UNIX / small utility / modular application design philosophy in mind. Content creators, developers, software engineers and entrepreneurs are encouraged to build large robust applications by integrating small single purposed extensions.</p><p>Periodic emphasizes a curated (and non-opinionated) workflow, using Express with MongoDB and an extremely malleable data model.</p><p>The use of additional frameworks, templating languages and design libraries is highly encouraged.</p><p>Applications built with Periodic range from simple blogs, complicated enterprise media publications, mobile application datastores, e-commerce platforms and more.</p><h3><a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs#whats-included\"></a>What's included?</h3><ul><li><strong>Flexible information hierarchy &amp; data model</strong><br>Efficiently create custom content items and groupings, with custom content types and additional data attributes</li><li><strong>Theming &amp; unrestrictive layouts</strong><br>Override application functionality with framework friendly, design library agnostic custom themes.</li><li><strong>Modular &amp; infinitely extendible</strong><br>Add extensions, node modules and more functionality with ease.</li><li><strong>High Scalable, Deployment &amp; Enterprise Friendly</strong><br>Quickly deploy and manage instances with PM2. Cloud friendly and create edge nodes, read only and private content management instances.</li></ul>&nbsp;"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463fe1b29915100003c2b8d",
            "createdat": "2014-11-13T00:40:59.855Z"
          }
        ],
        "tags": [
          "periodic"
        ],
        "categories": [
          "content-management"
        ],
        "authors": [
          "staff"
        ],
        "assets": [
          "effective-application-development-and-content-development"
        ],
        "originalitem": {}
      }
    },
    {
      "datatype": "item",
      "datadocument": {
        "random": 0.7858197765890509,
        "title": "Working with Content",
        "name": "working-with-content",
        "content": "<h2>Content and Information Architecture Philosophy</h2>\n<p>Periodic is designed to make defining content types and organizing information as frictionless as possible. Built to easily adapt to almost any kind of data structure, due to the schema-less nature of MongoDB documents it's extremely trivial to create associations and group content into collections and compilations.\n</p>\n<h2>Content Management &amp; Data Organization</h2>\n<p>The information architecture can vary dramatically from application to application; therefore, out of the box Periodic's default information architecture is extremely generic.</p>\n<p>The framework encourages the customization of architectures by defining custom attributes and content types.</p>\n<p>Content is organized into three data structures, Content Entities, Content Taxonomy and Content Types.</p>\n<h3>Content Entities</h3>\n<p>There are four different kinds of content entities: assets, items, collections and compilations. Content Entities are the building block of your application.</p>\n<p>Content Entities are generic documents, they can easily be extended by adding additional attributes, and can be further defined into specific content types.</p>\n<h4>Content Assets</h4>\n<p>Content Assets are what they sound like, they are uploaded files that can be associated with other content entities. In most use scenarios, content assets are images, videos, audio that are associated with items.</p>\n<h4>Content Items</h4>\n<p>In many Content based applications (like Wordpress, Drupal, Magento, etc) the building block is designed around the notion of a post/article. Using that analogy, a Periodic content 'item' would be a post.</p>\n<p>Unlike many content based applications, an 'item' can be any discreet piece of information, in come cases it's a store item, an activity feed item, a blog post, a location, a location, a book, a workout. </p>\n<h4>Content Collections</h4>\n<p>A Content Collection, is what it sounds like, a content document that has a collection of items associated with it.</p>\n<p>When does this become helpful? For example if you're designing the data model for a food based application, it might make sense to create recipes as collections, each item can be detailed steps, or a separate item for instruction steps, another item for ingredients.</p>\n<p>Another use case could be an advanced listicle/slideshow, or grouping exercises into work outs.</p>\n<h4>Content Compilations</h4>\n<p>A compilation is a mixed grouping of both collections and items</p>\n<h3>Content Taxonomy</h3>\n<p>Content can be classified specifically by adding either tags or categories to content entities</p>\n<h4>Content Tags</h4>\n<p>Tags are an ephemeral classification mechanism, tags are intended to be numerous, a content entity can have multiple tags.</p>\n<p>Tags can also be classified hierarchically, a tag can have parent tags.</p>\n<h4>Content Categories</h4>\n<p>Categories are a more defined classification mechanism, functionally they are identical to tags. A content entity can have multiple categories, and categories can also be organized hierarchically.</p>\n<h3>Content Types</h3>\n<p>Content types are the mechanism by which you can define and classify content. A content type has attributes, for example if you are creating a 'blog post', you may want additional fields (like a summary, or tagline) associated with every content entity that has the content type of 'blog post'.</p><p>\n</p>\n<p>Read more about content management and information architecture on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Content-&-Data\">Periodic Wiki - Content & Data</a></p>",
        "collectionitemonly": true,
        "updatedat": "2014-11-12T19:09:29.592Z",
        "createdat": "2014-11-12T19:09:29.592Z",
        "publishat": "2014-11-12T18:56:00.000Z",
        "entitytype": "item",
        "status": "publish",
        "itemauthorname": "staff",
        "primaryauthor": "staff",
        "changes": [
          {
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "changeset": {
              "title": "Working with Content",
              "name": "working-with-content",
              "content": "<h2>Content and Information Architecture Philosophy</h2><br>Periodic is designed to make &nbsp;defining content types and organizing information as frictionless as possible. Built to easily adapt to almost any kind of data structure, due to the schema-less nature of MongoDB documents it's extremely trivial to create associations and group content into collections and compilations.<br><br><h2>Content Management &amp; Data Organization</h2>Because the information architecture from application to application can vary dramatically, out of the box, Periodic's default information architecture is extremely generic. The framework encourages the customization of architectures by defining custom attributes and content types.<br><br>Content is organized into three data structures, Content Entities, Content Taxonomy and Content Types.<br><br>Content Entities<br><br>asfdsafa<br><br>Content Assets<br><br>Content Items<br><br>Content Collections<br><br>Content Compilations<br><br>Content Taxonomy<br><br>Content Tags<br><br>Content Categories<br><br>Content Types<br><br>",
              "tags": [
                "5463ad0769176103b96f40ef",
                "5463b05169176103b96f40f2",
                "5463b05469176103b96f40f3",
                "5463b05769176103b96f40f4",
                "5463b05969176103b96f40f5",
                "5463b05e69176103b96f40f6",
                "5463b06169176103b96f40f7",
                "5463b06669176103b96f40f8"
              ],
              "categories": [
                "54628f66f1bf6b0e7d51a774"
              ],
              "assets": [
                null
              ],
              "contenttypes": [
                null
              ]
            },
            "_id": "5463b06969176103b96f40fa",
            "createdat": "2014-11-12T19:09:29.592Z"
          },
          {
            "changeset": {
              "content": "<h2>Content and Information Architecture Philosophy</h2>\n<p>Periodic is designed to make &nbsp;defining content types and organizing information as frictionless as possible. Built to easily adapt to almost any kind of data structure, due to the schema-less nature of MongoDB documents it's extremely trivial to create associations and group content into collections and compilations.\n</p>\n<h2>Content Management &amp; Data Organization</h2>Because the information architecture from application to application can vary dramatically, out of the box, Periodic's default information architecture is extremely generic. The framework encourages the customization of architectures by defining custom attributes and content types.\n<p>Content is organized into three data structures, Content Entities, Content Taxonomy and Content Types.</p>\n<h3>Content Entities</h3>\n<p>asfdsafa</p>\n<h4>Content Assets</h4>\n<p>sdf</p>\n<h4>Content Items</h4>\n<h4>Content Collections</h4>\n<p>asf</p>\n<h4>Content Compilations</h4>\n<p>asfd</p>\n<h3>Content Taxonomy</h3>\n<p>asd</p>\n<h4>Content Tags</h4>\n<p>asdf</p>\n<h4>Content Categories</h4>\n<p>dsaf</p>\n<h3>Content Types</h3>\n<p>asdf<p>\n"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463b19869176103b96f40fb",
            "createdat": "2014-11-12T19:14:32.624Z"
          },
          {
            "changeset": {
              "content": "<h2>Content and Information Architecture Philosophy</h2>\n<p>Periodic is designed to make &nbsp;defining content types and organizing information as frictionless as possible. Built to easily adapt to almost any kind of data structure, due to the schema-less nature of MongoDB documents it's extremely trivial to create associations and group content into collections and compilations.\n</p>\n<h2>Content Management &amp; Data Organization</h2>\n<p>The information architecture can vary dramatically from application to application; therefore, out of the box Periodic's default information architecture is extremely generic.</p>\n<p>The framework encourages the customization of architectures by defining custom attributes and content types.</p>\n<p>Content is organized into three data structures, Content Entities, Content Taxonomy and Content Types.</p>\n<h3>Content Entities</h3>\n<p>There are four different kinds of content entities: assets, items, collections and compilations. Content Entities are the building block of your application.</p>\n<p>Content Entities are generic documents, they can easily be extended by adding additional attributes, and can be further defined into specific content types.</p>\n<h4>Content Assets</h4>\n<p>Content Assets are what they sound like, they are uploaded files that can be associated with other content entities. In most use scenarios, content assets are images, videos, audio that are associated with items.</p>\n<h4>Content Items</h4>\n<p>In many Content based applications (like Wordpress, Drupal, Magento, etc) the building block is designed around the notion of a post/article. Using that analogy, a Periodic content 'item' would be a post. Unlike many content based applications, an 'item' can be any discreet piece of information, in come cases it's a store item, an activity feed item, a blog post, a location, a location, a book, a workout. </p>\n<h4>Content Collections</h4>\n<p>A Content Collection, is what it sounds like, a content document that has a collection of items associated with it.</p>\n<p>When does this become helpful? For exmaple if you're designing a data model for a food application, it might make sense</p>\n<h4>Content Compilations</h4>\n<p>asfd</p>\n<h3>Content Taxonomy</h3>\n<p>asd</p>\n<h4>Content Tags</h4>\n<p>asdf</p>\n<h4>Content Categories</h4>\n<p>dsaf</p>\n<h3>Content Types</h3>\n<p>asdf<p>\n"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463bdea69176103b96f40fc",
            "createdat": "2014-11-12T20:07:06.298Z"
          },
          {
            "changeset": {
              "content": "<h2>Content and Information Architecture Philosophy</h2>\n<p>Periodic is designed to make defining content types and organizing information as frictionless as possible. Built to easily adapt to almost any kind of data structure, due to the schema-less nature of MongoDB documents it's extremely trivial to create associations and group content into collections and compilations.\n</p>\n<h2>Content Management &amp; Data Organization</h2>\n<p>The information architecture can vary dramatically from application to application; therefore, out of the box Periodic's default information architecture is extremely generic.</p>\n<p>The framework encourages the customization of architectures by defining custom attributes and content types.</p>\n<p>Content is organized into three data structures, Content Entities, Content Taxonomy and Content Types.</p>\n<h3>Content Entities</h3>\n<p>There are four different kinds of content entities: assets, items, collections and compilations. Content Entities are the building block of your application.</p>\n<p>Content Entities are generic documents, they can easily be extended by adding additional attributes, and can be further defined into specific content types.</p>\n<h4>Content Assets</h4>\n<p>Content Assets are what they sound like, they are uploaded files that can be associated with other content entities. In most use scenarios, content assets are images, videos, audio that are associated with items.</p>\n<h4>Content Items</h4>\n<p>In many Content based applications (like Wordpress, Drupal, Magento, etc) the building block is designed around the notion of a post/article. Using that analogy, a Periodic content 'item' would be a post. Unlike many content based applications, an 'item' can be any discreet piece of information, in come cases it's a store item, an activity feed item, a blog post, a location, a location, a book, a workout. </p>\n<h4>Content Collections</h4>\n<p>A Content Collection, is what it sounds like, a content document that has a collection of items associated with it.</p>\n<p>When does this become helpful? For example if you're designing the data model for a food based application, it might make sense to create recipes as collections, each item can be detailed steps, or a separate item for instruction steps, another item for ingredients.</p>\n<p>Another use case could be an advanced listicle/slideshow, or grouping exercises into work outs.</p>\n<h4>Content Compilations</h4>\n<p>A compilation is a mixed grouping of both collections and items</p>\n<h3>Content Taxonomy</h3>\n<p>Content can be classified specifically by adding either tags or categories to content entities</p>\n<h4>Content Tags</h4>\n<p>Tags are an ephemeral classification mechanism, tags are intended to be numerous, a content entity can have multiple tags.</p>\n<p>Tags can also be classified hierarchically, a tag can have parent tags.</p>\n<h4>Content Categories</h4>\n<p>Categories are a more defined classification mechanism, functionally they are identical to tags. A content entity can have multiple categories, and categories can also be organized hierarchically.</p>\n<h3>Content Types</h3>\n<p>Content types are the mechanism by which you can define and classify content. A content type has attributes, for example if you are creating a 'blog post', you may want additional fields (like a summary, or tagline) associated with every content entity that has the content type of 'blog post'.</p><p>\n</p>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463c932235ff15c39692598",
            "createdat": "2014-11-12T20:55:14.226Z"
          },
          {
            "changeset": {
              "content": "<h2>Content and Information Architecture Philosophy</h2>\n<p>Periodic is designed to make defining content types and organizing information as frictionless as possible. Built to easily adapt to almost any kind of data structure, due to the schema-less nature of MongoDB documents it's extremely trivial to create associations and group content into collections and compilations.\n</p>\n<h2>Content Management &amp; Data Organization</h2>\n<p>The information architecture can vary dramatically from application to application; therefore, out of the box Periodic's default information architecture is extremely generic.</p>\n<p>The framework encourages the customization of architectures by defining custom attributes and content types.</p>\n<p>Content is organized into three data structures, Content Entities, Content Taxonomy and Content Types.</p>\n<h3>Content Entities</h3>\n<p>There are four different kinds of content entities: assets, items, collections and compilations. Content Entities are the building block of your application.</p>\n<p>Content Entities are generic documents, they can easily be extended by adding additional attributes, and can be further defined into specific content types.</p>\n<h4>Content Assets</h4>\n<p>Content Assets are what they sound like, they are uploaded files that can be associated with other content entities. In most use scenarios, content assets are images, videos, audio that are associated with items.</p>\n<h4>Content Items</h4>\n<p>In many Content based applications (like Wordpress, Drupal, Magento, etc) the building block is designed around the notion of a post/article. Using that analogy, a Periodic content 'item' would be a post.</p>\n<p>Unlike many content based applications, an 'item' can be any discreet piece of information, in come cases it's a store item, an activity feed item, a blog post, a location, a location, a book, a workout. </p>\n<h4>Content Collections</h4>\n<p>A Content Collection, is what it sounds like, a content document that has a collection of items associated with it.</p>\n<p>When does this become helpful? For example if you're designing the data model for a food based application, it might make sense to create recipes as collections, each item can be detailed steps, or a separate item for instruction steps, another item for ingredients.</p>\n<p>Another use case could be an advanced listicle/slideshow, or grouping exercises into work outs.</p>\n<h4>Content Compilations</h4>\n<p>A compilation is a mixed grouping of both collections and items</p>\n<h3>Content Taxonomy</h3>\n<p>Content can be classified specifically by adding either tags or categories to content entities</p>\n<h4>Content Tags</h4>\n<p>Tags are an ephemeral classification mechanism, tags are intended to be numerous, a content entity can have multiple tags.</p>\n<p>Tags can also be classified hierarchically, a tag can have parent tags.</p>\n<h4>Content Categories</h4>\n<p>Categories are a more defined classification mechanism, functionally they are identical to tags. A content entity can have multiple categories, and categories can also be organized hierarchically.</p>\n<h3>Content Types</h3>\n<p>Content types are the mechanism by which you can define and classify content. A content type has attributes, for example if you are creating a 'blog post', you may want additional fields (like a summary, or tagline) associated with every content entity that has the content type of 'blog post'.</p><p>\n</p>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463c9c6235ff15c39692599",
            "createdat": "2014-11-12T20:57:42.074Z"
          },
          {
            "changeset": {
              "status": "publish"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463caef235ff15c396925a4",
            "createdat": "2014-11-12T21:02:39.482Z"
          },
          {
            "changeset": {
              "content": "<h2>Content and Information Architecture Philosophy</h2>\n<p>Periodic is designed to make defining content types and organizing information as frictionless as possible. Built to easily adapt to almost any kind of data structure, due to the schema-less nature of MongoDB documents it's extremely trivial to create associations and group content into collections and compilations.\n</p>\n<h2>Content Management &amp; Data Organization</h2>\n<p>The information architecture can vary dramatically from application to application; therefore, out of the box Periodic's default information architecture is extremely generic.</p>\n<p>The framework encourages the customization of architectures by defining custom attributes and content types.</p>\n<p>Content is organized into three data structures, Content Entities, Content Taxonomy and Content Types.</p>\n<h3>Content Entities</h3>\n<p>There are four different kinds of content entities: assets, items, collections and compilations. Content Entities are the building block of your application.</p>\n<p>Content Entities are generic documents, they can easily be extended by adding additional attributes, and can be further defined into specific content types.</p>\n<h4>Content Assets</h4>\n<p>Content Assets are what they sound like, they are uploaded files that can be associated with other content entities. In most use scenarios, content assets are images, videos, audio that are associated with items.</p>\n<h4>Content Items</h4>\n<p>In many Content based applications (like Wordpress, Drupal, Magento, etc) the building block is designed around the notion of a post/article. Using that analogy, a Periodic content 'item' would be a post.</p>\n<p>Unlike many content based applications, an 'item' can be any discreet piece of information, in come cases it's a store item, an activity feed item, a blog post, a location, a location, a book, a workout. </p>\n<h4>Content Collections</h4>\n<p>A Content Collection, is what it sounds like, a content document that has a collection of items associated with it.</p>\n<p>When does this become helpful? For example if you're designing the data model for a food based application, it might make sense to create recipes as collections, each item can be detailed steps, or a separate item for instruction steps, another item for ingredients.</p>\n<p>Another use case could be an advanced listicle/slideshow, or grouping exercises into work outs.</p>\n<h4>Content Compilations</h4>\n<p>A compilation is a mixed grouping of both collections and items</p>\n<h3>Content Taxonomy</h3>\n<p>Content can be classified specifically by adding either tags or categories to content entities</p>\n<h4>Content Tags</h4>\n<p>Tags are an ephemeral classification mechanism, tags are intended to be numerous, a content entity can have multiple tags.</p>\n<p>Tags can also be classified hierarchically, a tag can have parent tags.</p>\n<h4>Content Categories</h4>\n<p>Categories are a more defined classification mechanism, functionally they are identical to tags. A content entity can have multiple categories, and categories can also be organized hierarchically.</p>\n<h3>Content Types</h3>\n<p>Content types are the mechanism by which you can define and classify content. A content type has attributes, for example if you are creating a 'blog post', you may want additional fields (like a summary, or tagline) associated with every content entity that has the content type of 'blog post'.</p><p>\n</p>\n<p>Read more about content management and information architecture on the <a href=\"https://github.com/typesettin/periodicjs/wiki/Themes\">Periodic Wiki</a></p>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463d204235ff15c396925ae",
            "createdat": "2014-11-12T21:32:52.116Z"
          },
          {
            "changeset": {
              "content": "<h2>Content and Information Architecture Philosophy</h2>\n<p>Periodic is designed to make defining content types and organizing information as frictionless as possible. Built to easily adapt to almost any kind of data structure, due to the schema-less nature of MongoDB documents it's extremely trivial to create associations and group content into collections and compilations.\n</p>\n<h2>Content Management &amp; Data Organization</h2>\n<p>The information architecture can vary dramatically from application to application; therefore, out of the box Periodic's default information architecture is extremely generic.</p>\n<p>The framework encourages the customization of architectures by defining custom attributes and content types.</p>\n<p>Content is organized into three data structures, Content Entities, Content Taxonomy and Content Types.</p>\n<h3>Content Entities</h3>\n<p>There are four different kinds of content entities: assets, items, collections and compilations. Content Entities are the building block of your application.</p>\n<p>Content Entities are generic documents, they can easily be extended by adding additional attributes, and can be further defined into specific content types.</p>\n<h4>Content Assets</h4>\n<p>Content Assets are what they sound like, they are uploaded files that can be associated with other content entities. In most use scenarios, content assets are images, videos, audio that are associated with items.</p>\n<h4>Content Items</h4>\n<p>In many Content based applications (like Wordpress, Drupal, Magento, etc) the building block is designed around the notion of a post/article. Using that analogy, a Periodic content 'item' would be a post.</p>\n<p>Unlike many content based applications, an 'item' can be any discreet piece of information, in come cases it's a store item, an activity feed item, a blog post, a location, a location, a book, a workout. </p>\n<h4>Content Collections</h4>\n<p>A Content Collection, is what it sounds like, a content document that has a collection of items associated with it.</p>\n<p>When does this become helpful? For example if you're designing the data model for a food based application, it might make sense to create recipes as collections, each item can be detailed steps, or a separate item for instruction steps, another item for ingredients.</p>\n<p>Another use case could be an advanced listicle/slideshow, or grouping exercises into work outs.</p>\n<h4>Content Compilations</h4>\n<p>A compilation is a mixed grouping of both collections and items</p>\n<h3>Content Taxonomy</h3>\n<p>Content can be classified specifically by adding either tags or categories to content entities</p>\n<h4>Content Tags</h4>\n<p>Tags are an ephemeral classification mechanism, tags are intended to be numerous, a content entity can have multiple tags.</p>\n<p>Tags can also be classified hierarchically, a tag can have parent tags.</p>\n<h4>Content Categories</h4>\n<p>Categories are a more defined classification mechanism, functionally they are identical to tags. A content entity can have multiple categories, and categories can also be organized hierarchically.</p>\n<h3>Content Types</h3>\n<p>Content types are the mechanism by which you can define and classify content. A content type has attributes, for example if you are creating a 'blog post', you may want additional fields (like a summary, or tagline) associated with every content entity that has the content type of 'blog post'.</p><p>\n</p>\n<p>Read more about content management and information architecture on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Content-&-Data\">Periodic Wiki - Content & Data</a></p>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463d307235ff15c396925b4",
            "createdat": "2014-11-12T21:37:11.601Z"
          }
        ],
        "tags": [
          "periodic",
          "content",
          "tags",
          "categories",
          "content-types",
          "assets",
          "collections",
          "compilations"
        ],
        "categories": [
          "content-management"
        ],
        "authors": [
          "staff"
        ],
        "originalitem": {}
      }
    },
    {
      "datatype": "collection",
      "datadocument": {
        "title": "Dealing with Files",
        "name": "dealing-with-files",
        "content": "<p>Files are a content entity that can have tags, categories and content type attributes as well.</p>",
        "updatedat": "2014-11-12T22:45:50.793Z",
        "createdat": "2014-11-12T22:45:50.793Z",
        "publishat": "2014-11-12T22:30:00.000Z",
        "entitytype": "collection",
        "status": "publish",
        "primaryauthor": "staff",
        "primaryasset": "manage-files",
        "changes": [
          {
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "changeset": {
              "title": "Dealing with Files",
              "name": "dealing-with-files",
              "tags": [
                null
              ],
              "categories": [
                null
              ],
              "assets": [
                null
              ],
              "contenttypes": [
                null
              ]
            },
            "_id": "5463e31e235ff15c396925cd",
            "createdat": "2014-11-12T22:45:50.793Z"
          },
          {
            "changeset": {
              "tags": [
                "5463cadc235ff15c3969259f"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e324235ff15c396925ce",
            "createdat": "2014-11-12T22:45:56.248Z"
          },
          {
            "changeset": {
              "tags": [
                "5463cadc235ff15c3969259f",
                "5463cadd235ff15c396925a1"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e327235ff15c396925cf",
            "createdat": "2014-11-12T22:45:59.735Z"
          },
          {
            "changeset": {
              "categories": [
                "54628f66f1bf6b0e7d51a774"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e32a235ff15c396925d0",
            "createdat": "2014-11-12T22:46:02.670Z"
          },
          {
            "changeset": {
              "status": "publish"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e341235ff15c396925d3",
            "createdat": "2014-11-12T22:46:25.482Z"
          },
          {
            "changeset": {
              "publishat": "2014-11-12T22:30:00.000Z"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e9ba82affd0000f1c1a5",
            "createdat": "2014-11-12T23:14:02.578Z"
          },
          {
            "changeset": {
              "content": "<p>Files are a content entity that can have tags, categories and content type attributes as well.</p>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ead58a9d9f00006e0c99",
            "createdat": "2014-11-12T23:18:45.558Z"
          },
          {
            "changeset": {
              "assets": [
                "5463eef38a9d9f00006e0cb3"
              ],
              "primaryasset": "5463eef38a9d9f00006e0cb3"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463eef48a9d9f00006e0cb5",
            "createdat": "2014-11-12T23:36:20.310Z"
          }
        ],
        "tags": [
          "files",
          "uploads"
        ],
        "categories": [
          "content-management"
        ],
        "authors": [
          "staff"
        ],
        "assets": [
          "manage-files"
        ],
        "items": [
          {
            "item": "managing-files-and-assets",
            "order": 0
          }
        ]
      }
    },
    {
      "datatype": "collection",
      "datadocument": {
        "title": "Customizing your application",
        "name": "customizing-your-application",
        "content": "<p>Your settings and configuration are located in the <i><strong>'content/config'</strong></i> directory.</p> \n<p>Most themes and extensions have their own configuration options, the files associated with them can be edited manually or via the admin interface</p>\n<p>Read more about how to customize your application on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Configuration\">Periodic Wiki - Configuration</a></p>",
        "updatedat": "2014-11-12T22:36:27.103Z",
        "createdat": "2014-11-12T22:36:27.103Z",
        "publishat": "2014-11-12T22:36:00.000Z",
        "entitytype": "collection",
        "status": "publish",
        "primaryauthor": "staff",
        "primaryasset": "manage-installed-extensions",
        "changes": [
          {
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "changeset": {
              "title": "Customizing your application",
              "name": "customizing-your-application",
              "content": "<p>Your settings and configuration are located in the <i><strong>'content/config'</strong></i> directory.</p> \r\n<p>Most themes and extensions have their own configuration options, the files associated with them can be edited manually or via the admin interface</p>\r\n<p>Read more about how to customize your application on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Configuration\">Periodic Wiki - Configuration</a></p>",
              "tags": [
                null
              ],
              "categories": [
                null
              ],
              "assets": [
                null
              ],
              "contenttypes": [
                null
              ]
            },
            "_id": "5463e0eb235ff15c396925b8",
            "createdat": "2014-11-12T22:36:27.103Z"
          },
          {
            "changeset": {
              "content": "<p>Your settings and configuration are located in the <i><strong>'content/config'</strong></i> directory.</p> \n<p>Most themes and extensions have their own configuration options, the files associated with them can be edited manually or via the admin interface</p>\n<p>Read more about how to customize your application on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Configuration\">Periodic Wiki - Configuration</a></p>",
              "categories": [
                "54628f66f1bf6b0e7d51a774"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e0f1235ff15c396925b9",
            "createdat": "2014-11-12T22:36:33.206Z"
          },
          {
            "changeset": {
              "content": "<p>Your settings and configuration are located in the <i><strong>'content/config'</strong></i> directory.</p> \n<p>Most themes and extensions have their own configuration options, the files associated with them can be edited manually or via the admin interface</p>\n<p>Read more about how to customize your application on the <a rel=\"nofollow\" target=\"_blank\" href=\"https://github.com/typesettin/periodicjs/wiki/Configuration\">Periodic Wiki - Configuration</a></p>",
              "categories": [
                "54628f66f1bf6b0e7d51a774"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e0f1235ff15c396925ba",
            "createdat": "2014-11-12T22:36:33.209Z"
          },
          {
            "changeset": {
              "tags": [
                "5463e0f4235ff15c396925bb"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e0f4235ff15c396925bc",
            "createdat": "2014-11-12T22:36:36.842Z"
          },
          {
            "changeset": {
              "tags": [
                "5463e0f4235ff15c396925bb",
                "5463d293235ff15c396925af"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e0f9235ff15c396925bd",
            "createdat": "2014-11-12T22:36:41.513Z"
          },
          {
            "changeset": {
              "tags": [
                "5463e0f4235ff15c396925bb",
                "5463d293235ff15c396925af",
                "5463cea7235ff15c396925a6"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e0ff235ff15c396925be",
            "createdat": "2014-11-12T22:36:47.663Z"
          },
          {
            "changeset": {
              "tags": [
                "5463e0f4235ff15c396925bb",
                "5463d293235ff15c396925af",
                "5463cea7235ff15c396925a6"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e0ff235ff15c396925bf",
            "createdat": "2014-11-12T22:36:47.670Z"
          },
          {
            "changeset": {
              "status": "publish"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e110235ff15c396925c6",
            "createdat": "2014-11-12T22:37:04.741Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ef7e8a9d9f00006e0cb8"
              ],
              "primaryasset": "5463ef7e8a9d9f00006e0cb8"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463f54a29915100003c2b6a",
            "createdat": "2014-11-13T00:03:22.798Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ef7e8a9d9f00006e0cb8",
                "5463f5b329915100003c2b6d",
                "5463f5b329915100003c2b6e",
                "5463f5b329915100003c2b6f",
                "5463f5b329915100003c2b70",
                "5463f5b329915100003c2b71",
                "5463f5b329915100003c2b72",
                "5463f5b329915100003c2b73",
                "5463f5b329915100003c2b74"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463f5b329915100003c2b77",
            "createdat": "2014-11-13T00:05:07.985Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ef7e8a9d9f00006e0cb8",
                "5463f5b329915100003c2b6d",
                "5463f5b329915100003c2b6e",
                "5463f5b329915100003c2b6f",
                "5463f5b329915100003c2b70",
                "5463f5b329915100003c2b71",
                "5463f5b329915100003c2b72",
                "5463f5b329915100003c2b73",
                "5463f5b329915100003c2b74"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463f5b429915100003c2b7a",
            "createdat": "2014-11-13T00:05:08.069Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ef7e8a9d9f00006e0cb8",
                "5463f5b329915100003c2b6d",
                "5463f5b329915100003c2b6e",
                "5463f5b329915100003c2b6f",
                "5463f5b329915100003c2b70",
                "5463f5b329915100003c2b71",
                "5463f5b329915100003c2b72",
                "5463f5b329915100003c2b73",
                "5463f5b329915100003c2b74"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463f5b429915100003c2b7d",
            "createdat": "2014-11-13T00:05:08.082Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ef7e8a9d9f00006e0cb8",
                "5463f5b329915100003c2b6d",
                "5463f5b329915100003c2b6e",
                "5463f5b329915100003c2b6f",
                "5463f5b329915100003c2b70",
                "5463f5b329915100003c2b71",
                "5463f5b329915100003c2b72",
                "5463f5b329915100003c2b73",
                "5463f5b329915100003c2b74"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463f5b429915100003c2b80",
            "createdat": "2014-11-13T00:05:08.101Z"
          }
        ],
        "tags": [
          "settings",
          "extensions",
          "themes"
        ],
        "categories": [
          "content-management"
        ],
        "authors": [
          "staff"
        ],
        "assets": [
          "manage-installed-extensions",
          "manage-users",
          "switch-themes",
          "install-new-themes",
          "customize-your-application-settings",
          "editing-items",
          "user-privileges",
          "add-new-themes",
          "theme-settings-screenshot"
        ],
        "items": [
          {
            "item": "changing-the-look-and-feel",
            "order": 0
          },
          {
            "item": "extending-periodic-with-new-functionality",
            "order": 10
          }
        ]
      }
    },
    {
      "datatype": "compilation",
      "datadocument": {
        "title": "Rethinking Content Management",
        "name": "rethinking-content-management",
        "content": "<p>The admin extension provides a nice interface for managing content in Periodic.</p> <p>The extension also uses additional workflow helper extensions to allow for user access control, scheduled posts and more.</p>",
        "updatedat": "2014-11-12T22:45:02.724Z",
        "createdat": "2014-11-12T22:45:02.724Z",
        "publishat": "2014-11-12T22:44:00.000Z",
        "entitytype": "compilation",
        "status": "publish",
        "primaryauthor": "staff",
        "primaryasset": "reader-theme-navigation",
        "changes": [
          {
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "changeset": {
              "title": "Rethinking Content Management",
              "name": "rethinking-content-management",
              "tags": [
                null
              ],
              "categories": [
                "54628f66f1bf6b0e7d51a774"
              ],
              "assets": [
                null
              ],
              "contenttypes": [
                null
              ]
            },
            "_id": "5463e2ee235ff15c396925ca",
            "createdat": "2014-11-12T22:45:02.725Z"
          },
          {
            "changeset": {
              "search": "deal"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463e376235ff15c396925d9",
            "createdat": "2014-11-12T22:47:18.056Z"
          },
          {
            "changeset": {
              "content": "<p>The admin extension provides a nice interface for managing content in Periodic.</p> <p>The extension also uses additional workflow helper extensions to allow for user access control, scheduled posts and more.</p>"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ec9f8a9d9f00006e0c9c",
            "createdat": "2014-11-12T23:26:23.634Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ed318a9d9f00006e0c9d"
              ],
              "primaryasset": "5463ed318a9d9f00006e0c9d"
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ed318a9d9f00006e0ca0",
            "createdat": "2014-11-12T23:28:49.884Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ed318a9d9f00006e0c9d",
                "5463ed5f8a9d9f00006e0ca5",
                "5463ed5f8a9d9f00006e0ca6",
                "5463ed5f8a9d9f00006e0ca7"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ed608a9d9f00006e0caa",
            "createdat": "2014-11-12T23:29:36.500Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ed318a9d9f00006e0c9d",
                "5463ed5f8a9d9f00006e0ca5",
                "5463ed5f8a9d9f00006e0ca6",
                "5463ed5f8a9d9f00006e0ca7"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ed608a9d9f00006e0cad",
            "createdat": "2014-11-12T23:29:36.562Z"
          },
          {
            "changeset": {
              "assets": [
                "5463ed318a9d9f00006e0c9d",
                "5463ed5f8a9d9f00006e0ca5",
                "5463ed5f8a9d9f00006e0ca6",
                "5463ed5f8a9d9f00006e0ca7"
              ]
            },
            "editor": "54628f66f1bf6b0e7d51a759",
            "editor_username": "staff",
            "_id": "5463ed608a9d9f00006e0cb0",
            "createdat": "2014-11-12T23:29:36.578Z"
          }
        ],
        "categories": [
          "content-management"
        ],
        "authors": [
          "staff"
        ],
        "assets": [
          "reader-theme-navigation",
          "reader-theme-author-profile",
          "reader-theme-homepage",
          "search-for-content"
        ],
        "content_entities": [
          {
            "entity_item": "working-with-content",
            "entitytype": "item",
            "order": 0
          },
          {
            "entity_collection": "dealing-with-files",
            "entitytype": "collection",
            "order": 10
          }
        ]
      }
    }
  ]
}